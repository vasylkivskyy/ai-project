service: ai-project

provider:
  name: aws
  runtime: nodejs20.x
  region: ${env:REGION}
  environment:
    REGION: ${env:REGION}
    DATA_PARSING_QUEUE_URL: !Ref DataParsingQueue
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource: "arn:aws:s3:::dataset-bucket-5/*"
    - Effect: "Allow"
      Action:
        - "sqs:ReceiveMessage"
        - "sqs:DeleteMessage"
        - "sqs:GetQueueAttributes"
      Resource:
        - !GetAtt DataParsingQueue.Arn
        - !GetAtt DataTransformationQueue.Arn
    - Effect: "Allow"
      Action:
        - "events:PutEvents"
      Resource: "arn:aws:events:${env:REGION}:${env:AWS_ACCOUNT_ID}:event-bus/default"
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
      Resource:
        - "arn:aws:dynamodb:${env:REGION}:${env:AWS_ACCOUNT_ID}:table/parsed-reviews"
        - "arn:aws:dynamodb:${env:REGION}:${env:AWS_ACCOUNT_ID}:table/parsing-metadata"
    - Effect: "Allow"
      Action:
        - "dynamodb:DescribeStream"
        - "dynamodb:GetRecords"
        - "dynamodb:GetShardIterator"
      Resource: "arn:aws:dynamodb:${env:REGION}:${env:AWS_ACCOUNT_ID}:table/parsed-reviews/stream/*"
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
      Resource: !GetAtt DataTransformationQueue.Arn

plugins:
  - serverless-offline
  - serverless-dotenv-plugin

package:
  excludeDevDependencies: true

functions:
  data-parser:
    handler: src/functions/data-parser/handler.handler
    events:
      - sqs:
          arn: !GetAtt DataParsingQueue.Arn
  data-transformer:
    handler: src/functions/data-transformer/handler.handler
    events:
      - sqs:
          arn: !GetAtt DataTransformationQueue.Arn

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: dataset-bucket-5
        NotificationConfiguration:
          EventBridgeConfiguration:
            EventBridgeEnabled: true
    DataParsingQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: data-parsing-queue
    S3EventRule:
      Type: AWS::Events::Rule
      Properties:
        EventPattern:
          source:
            - aws.s3
          detail-type:
            - "Object Created"
          detail:
            bucket:
              name:
                - dataset-bucket-5
        Targets:
          - Arn: !GetAtt DataParsingQueue.Arn
            Id: DataParsingQueueTarget
    SQSQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: events.amazonaws.com
              Action: sqs:SendMessage
              Resource: !GetAtt DataParsingQueue.Arn
        Queues:
          - !Ref DataParsingQueue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: file-processed-topic
    SNSTopicSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: !Ref SNSTopic
        Protocol: email
        Endpoint: Volodymyr_Vasylkivskyi@epam.com
    SNSTopicPolicy:
      Type: AWS::SNS::TopicPolicy
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sns:Publish
              Resource: !Ref SNSTopic
        Topics:
          - !Ref SNSTopic
    FileParsedEventRule:
      Type: AWS::Events::Rule
      Properties:
        EventPattern:
          source:
            - custom.dataParser
          detail-type:
            - FILE_PARSED
        Targets:
          - Arn: !Ref SNSTopic
            Id: SNSTopicTarget
            RoleArn: !GetAtt EventBridgeToSNSRole.Arn
    EventBridgeToSNSRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: EventBridgeToSNSRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: events.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: EventBridgeToSNSPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - sns:Publish
                  Resource: !Ref SNSTopic
    ReviewsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: parsed-reviews
        StreamSpecification:
          StreamViewType: NEW_IMAGE
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    MetadataTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: parsing-metadata
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    DataTransformationQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: data-transformation-queue
    DataTransformationQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: events.amazonaws.com
              Action: sqs:SendMessage
              Resource: !GetAtt DataTransformationQueue.Arn
        Queues:
          - !Ref DataTransformationQueue
    DataTransformationPipe:
      Type: AWS::Pipes::Pipe
      Properties:
        Name: data-transformation-pipe
        RoleArn: !GetAtt PipeRole.Arn
        Source: !GetAtt ReviewsTable.StreamArn
        SourceParameters:
          DynamoDBStreamParameters:
            StartingPosition: LATEST
        Target: !GetAtt DataTransformationQueue.Arn
    PipeRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: DataTransformationPipeRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: pipes.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: PipePolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:DescribeStream
                    - dynamodb:GetRecords
                    - dynamodb:GetShardIterator
                  Resource: !Sub "arn:aws:dynamodb:${env:REGION}:${env:AWS_ACCOUNT_ID}:table/parsed-reviews/stream/*"
                - Effect: Allow
                  Action:
                    - sqs:SendMessage
                  Resource: !GetAtt DataTransformationQueue.Arn
